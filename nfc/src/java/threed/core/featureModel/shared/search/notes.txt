5 areas for improvement in TreeSearch csp

1.  Try adding pngs as csp vars
    this caused a memory blowup in the bdd
    might work in csp

2.  use simplify as a drop in replacement for eval

3.  call propagate/autoAssignTrue on the "simplified" expr
    so searchTree would do this:

        csp.assign("LTD",true);
        BoolExpr e = topExpr.eval(ctx)   //where eval is really simplify
        if( e.isTrue() )  {  //note e is aBoolExpr not a Bit
            iterate (or count) remaining cross-product var state
        }if(e.ifFalse()){
            //do whatever is being done no in the catch block
        }           ()
       csp.propagate



4.  make BoolExpr (and thus the csp's constraint) immutable to avoid the copying

5.  Use a flyweight BoolExpr factory where every sub-part of the expression is cached

    To reasons to use a flyweight
        object creating is expensive

